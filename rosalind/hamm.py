# Rosalind HAMM: Counting Point Mutations

# Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).
# Return: The Hamming distance dH(s,t).

# define given dna strings as variables
dna_sequence_1 = "AACACTTGGCGGTTTTCGCGCGATCACGGTAATTATAACACTTCCGCCTCTCTAATCCCATGGGTATCGCGTTGCCGCCGCCGCAAACTCTTCCGGTATAATCTGGGAGCCAACAGACGCAGTAGTGGCCCAATTTATAAAAAGAAAATCCTACACGCCTCGGTTCTGTTACATAATAGACGATTCTCCAGCAGAGTGGACAGATCGATTAACAGCGCACATAATGTTAAACTATGTTGTGTTATCCAACTAGTGACCACAATACTAGCGAACCCCCAAATAACTAGTGCGTGATGATGTGCGGTACAACTCCTTTCGTGAAACCAGGTAGTTTCTCAAGGGTGAACGGGAATTGTGCGTTAATGGACGGCTTCTTCCATGTGCGTTTACCGCCGTAACAAACCCGCGCCTCAGGGCTATTTTACCCTATTCAGTTGAATTCAGTCCCATCGTACTTTCTCACTGAGTGCTGACGAGCCACACGGCAGGTACGCGTTCTGGATAAATGCACCCCCGTGTTGCCACTGAAGAGAAAGCCCGCATCCGTATGCCATAAGCCGCACCTGCTCTTGGGTAGATAATGTCGTTGGTGACCTGAATAATCAAAAACTATTTATACCCAACAGGGAACGCGATACAGTCAGATGCTGACAGTAACTGTACACGTTCCCGCGCAAGTATTGTTCATCGCCAAGAAGGGCACCTTCAGCATCTCCTGACAGCAACAGGTTGCGTCGACCGTCCCTGATTTATCAAAACAAAATATCCGAGAGAGTGATATTGAATGGTTTTACCGGACGATAGATAACCGTCGGGTCACATCTAGGTTGTAGCCATATCGCCCAGCCCACGCGTAGCCGGTGCGATAGCGTTGAGCGATCCCAACAAAAAAGAATCTCTAATGGTGCGCGAGTGGCGGAGAATCGAGCTTCGATGAGATGCGCTCGTAGCTACAAGCGCAGGTTTACCTAAACTGGGCGGACATCTAAA"
dna_sequence_2 = "AAGGCTTGGTGGCTCCAGTCCCATGTCCGTCATGTACACAGTCCTGCCTTGGTAATACTCTTGGTAACGCGCTTATCGAGTCGGAAACAGCTTCCGTATGTTGTGGCAGACGAGCGACGAACTTGCGGCCTAAGTAAAAAATAATATTTCCTACATGCTAGATTGATGGTGCAGGGTGGCCTTTCCTTCACCAATGTCGCCTCGTCTTTAAAAAGCGCACATAATGTTCCCACAAGGTCAAATAGTTATCTAGTCTGCAGTAGTATCGCATGCTCCCAAGGAACTTACGGAACATTATATTCGATACTACCTTTCTGGGCCCAAGAGGGCGTTCCTAAAAGATAGCCGGATGCAGACCCTTACTGGTTAGCACCCGCCATCAGAGTATCAGTCACTATCTTATCCACGGTTCATGTTTATCTTAACTAAGGAAGTAGCATTTAATCTAATCGCCAGTTTAGCGAGATTGCTAACCAGCCGCAGGAACGGTGCTAGAATGTGTTGAACACGCCTCCGCTTTCCCAGGCATGCGAACAACCACTTCCGTCGCATATATGCGGGACAATCTCTTGGGTATCTCCTGCAGTTAGTTTTCTTGATTTATACTACCGAGCTGCACACAAGGTGCAAGGTGACACGTTCGCATGCTTACAGCCTGGGTTACATTTCCATAGCACGTACTGCCCCAGGCCAACAAGTTGCTCATCATGATGTCCCGAAAGTATCGATTCGAGGATACCATTCGTGATTCTGTGGTTCTGCCTCACTAAGAGACAGGCATCCCCTCGATTTCTCTTGAGAGTTATTAACGTAATGTAAGCTGAAGGGTGTGTGAAAGTCCCCATGCCTACGAAGCACGTCGGAGAGGGCTTAGAGCCACGCATAGAATGAACTTTCTTTTGTGGTCAGCAGGTCGCTGTGTGAGGAGGTTCGACGAATTTTCCGCGACGTTGCAGACTTGAGGGCTACTGAACTAGGTTGATCTCAATA"

# define empty variable for hamming distance that will be used as a counter
hamming_distance = 0

# for corresponding items (make sure they correspond by looping through the different indices) of both dna strings, check if they are not the same, if that's the case, add one to the hamming distance variable
for index in range(len(dna_sequence_1)):
    if dna_sequence_1[index] != dna_sequence_2[index]:
        hamming_distance += 1

# print hamming distance
print(hamming_distance)

# My result: 470 (which is correct)